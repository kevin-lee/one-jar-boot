name: Release

on:
  push:
    branches:
      - main
    tags:
      - '*'

env:
  GH_JAVA_VERSION: "adopt@1.8"
  GH_JVM_OPTS: "-Xss64m -Xms1024m -XX:MaxMetaspaceSize=1G -Xmx2G"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
    - uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ env.GH_JAVA_VERSION }}

    - name: Cache SBT
      uses: actions/cache@v2.1.5
      with:
        path: |
          ~/.ivy2/cache
          ~/.cache/coursier
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
        restore-keys: |
          ${{ runner.os }}-sbt

    - name: sbt build
      env:
        CURRENT_BRANCH_NAME: ${{ github.ref }}
        RUN_ID: ${{ github.run_id }}
        RUN_NUMBER: ${{ github.run_number }}
        JVM_OPTS: ${{ env.GH_JVM_OPTS }}
      run: |
        echo "[BEFORE]CURRENT_BRANCH_NAME=${CURRENT_BRANCH_NAME}"
        export CURRENT_BRANCH_NAME="${CURRENT_BRANCH_NAME#refs/heads/}"
        echo " [AFTER]CURRENT_BRANCH_NAME=${CURRENT_BRANCH_NAME}"
        echo "RUN_ID=${RUN_ID}"
        echo "RUN_NUMBER=${RUN_NUMBER}"
        echo "Push #${PUSH_NUMBER}"
        java -version
        echo "JVM_OPTS=${JVM_OPTS}"
        echo "SBT_OPTS=${SBT_OPTS}"
        echo "sbt packagedArtifacts"
        sbt \
          packagedArtifacts

  gh-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
    - uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ env.GH_JAVA_VERSION }}

    - name: Cache SBT
      uses: actions/cache@v2.1.5
      with:
        path: |
          ~/.ivy2/cache
          ~/.cache/coursier
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
        restore-keys: |
          ${{ runner.os }}-sbt

    - name: sbt GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
        JVM_OPTS: ${{ env.GH_JVM_OPTS }}
      run: |
        echo "Run] sbt GitHub release"
        echo "JVM_OPTS=${JVM_OPTS}"
        echo "SBT_OPTS=${SBT_OPTS}"
        echo 'sbt devOopsGitHubRelease'
        sbt \
          devOopsGitHubRelease

  publish:
    needs: gh-release

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
    - uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ env.GH_JAVA_VERSION }}

    - name: Cache SBT
      uses: actions/cache@v2.1.5
      with:
        path: |
          ~/.ivy2/cache
          ~/.cache/coursier
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
        restore-keys: |
          ${{ runner.os }}-sbt

    - name: "sbt ci-release - ${{ github.run_number }}"
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
        JVM_OPTS: ${{ env.GH_JVM_OPTS }}
      run: |
        echo "Run] sbt ci-release"
        export SOURCE_DATE_EPOCH=$(date +%s)
        echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
        echo "JVM_OPTS=${JVM_OPTS}"
        echo "SBT_OPTS=${SBT_OPTS}"
        echo 'sbt -v clean packagedArtifacts ci-release devOopsGitHubReleaseUploadArtifacts'
        sbt \
          -v \
          clean \
          packagedArtifacts \
          ci-release \
          devOopsGitHubReleaseUploadArtifacts

  publish-snapshot:
    needs: build
    if: startsWith(github.ref, 'refs/heads/')

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
    - uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ env.GH_JAVA_VERSION }}

    - name: Cache SBT
      uses: actions/cache@v2.1.5
      with:
        path: |
          ~/.ivy2/cache
          ~/.cache/coursier
          ~/.sbt
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
        restore-keys: |
          ${{ runner.os }}-sbt

    - name: "sbt ci-release (no tag) - ${{ github.run_number }}"
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
        JVM_OPTS: ${{ env.GH_JVM_OPTS }}
      run: |
        echo "Run] sbt ci-release"
        export SOURCE_DATE_EPOCH=$(date +%s)
        echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
        echo "JVM_OPTS=${JVM_OPTS}"
        echo "SBT_OPTS=${SBT_OPTS}"
        echo 'sbt -v clean packagedArtifacts ci-release'
        sbt \
          -v \
          clean \
          packagedArtifacts \
          ci-release
